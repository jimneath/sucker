var search_data = {"index":{"searchIndex":["object","sucker","activesupport","mockresponse","request","response","<<()","associate_tag=()","blank?()","curl()","get()","key=()","new()","new()","new()","new()","node()","presence()","present?()","stub()","to_hash()","xml()","license","readme.markdown","sucker.rb","blank.rb","nokogiri.rb","request.rb","response.rb","stub.rb"],"longSearchIndex":["lib/sucker/active_support/core_ext/object/blank.rb","lib/sucker.rb","sucker","sucker","sucker","sucker","sucker::request","sucker::request","object","sucker::request","sucker::request","sucker::request","sucker","sucker::mockresponse","sucker::request","sucker::response","sucker::response","object","object","sucker","sucker::response","sucker::response","files/license.html","files/readme_markdown.html","files/lib/sucker_rb.html","files/lib/sucker/active_support/core_ext/object/blank_rb.html","files/lib/sucker/active_support/xml_mini/nokogiri_rb.html","files/lib/sucker/request_rb.html","files/lib/sucker/response_rb.html","files/lib/sucker/stub_rb.html"],"info":[["Object","lib/sucker/active_support/core_ext/object/blank.rb","classes/Object.html"," < Object","http://github.com/rails/rails/blob/v3.0.0/activesupport/core_ext/object/blank.rb ",1],["Sucker","lib/sucker/active_support/xml_mini/nokogiri.rb","classes/Sucker.html"," < ","http://github.com/rails/rails/blob/v3.0.0/activesupport/lib/active_support/xml_mini/nokogiri.rb --- =",1],["ActiveSupport","Sucker","classes/Sucker/ActiveSupport.html"," < ","",1],["MockResponse","Sucker","classes/Sucker/MockResponse.html"," < Response","Stubs Sucker::Response to run specs offline. ",1],["Request","Sucker","classes/Sucker/Request.html"," < Object","A wrapper around the API request ",1],["Response","Sucker","classes/Sucker/Response.html"," < Object","A Nokogiri-driven wrapper around the cURL response ",1],["<<","Sucker::Request","classes/Sucker/Request.html#M000004","(hash)","A helper method that merges a hash into the parameters ",2],["associate_tag=","Sucker::Request","classes/Sucker/Request.html#M000005","(token)","A helper method that sets the associate tag ",2],["blank?","Object","classes/Object.html#M000000","()","An object is blank if it's false, empty, or a whitespace string. For example, \"\", \"   \", +nil+, [], and",2],["curl","Sucker::Request","classes/Sucker/Request.html#M000006","()","A reusable, configurable cURL object ",2],["get","Sucker::Request","classes/Sucker/Request.html#M000007","()","Performs the request and returns a response object ",2],["key=","Sucker::Request","classes/Sucker/Request.html#M000008","(token)","A helper method that sets the AWS Access Key ID ",2],["new","Sucker","classes/Sucker.html#M000021","(args={})","Instantiates a new Sucker::Request ",2],["new","Sucker::MockResponse","classes/Sucker/MockResponse.html#M000020","(mock_response_body)","",2],["new","Sucker::Request","classes/Sucker/Request.html#M000003","(args)","",2],["new","Sucker::Response","classes/Sucker/Response.html#M000010","(curl)","",2],["node","Sucker::Response","classes/Sucker/Response.html#M000011","(path)","Queries an xpath and returns result as an array of hashes ",2],["presence","Object","classes/Object.html#M000002","()","Returns object if it's #present? otherwise returns nil. object.presence is equivalent to object.present?",2],["present?","Object","classes/Object.html#M000001","()","An object is present if it's not blank. ",2],["stub","Sucker","classes/Sucker.html#M000022","(request)","Records a request on first run and fakes subsequently ",2],["to_hash","Sucker::Response","classes/Sucker/Response.html#M000012","()","Parses the response into a simple hash ",2],["xml","Sucker::Response","classes/Sucker/Response.html#M000013","()","The XML document ",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","(The MIT License)   Copyright (c) 2009 Paper Cavalier   Permission is hereby granted, free of charge,",3],["README.markdown","files/README_markdown.html","files/README_markdown.html","","Sucker ======  Sucker is a paper-thin Ruby wrapper to the [Amazon Product Advertising API](https://affiliate-program.amazon.co.uk/gp/advertising/api/detail/main.html).",3],["sucker.rb","files/lib/sucker_rb.html","files/lib/sucker_rb.html","","",3],["blank.rb","files/lib/sucker/active_support/core_ext/object/blank_rb.html","files/lib/sucker/active_support/core_ext/object/blank_rb.html","","http://github.com/rails/rails/blob/v3.0.0/activesupport/core_ext/object/blank.rb ",3],["nokogiri.rb","files/lib/sucker/active_support/xml_mini/nokogiri_rb.html","files/lib/sucker/active_support/xml_mini/nokogiri_rb.html","","http://github.com/rails/rails/blob/v3.0.0/activesupport/lib/active_support/xml_mini/nokogiri.rb --- =",3],["request.rb","files/lib/sucker/request_rb.html","files/lib/sucker/request_rb.html","","",3],["response.rb","files/lib/sucker/response_rb.html","files/lib/sucker/response_rb.html","","",3],["stub.rb","files/lib/sucker/stub_rb.html","files/lib/sucker/stub_rb.html","","",3]]}}